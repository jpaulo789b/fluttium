"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[740],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=i.createContext({}),l=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=l(e.components);return i.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),f=r,m=d["".concat(c,".").concat(f)]||d[f]||u[f]||o;return n?i.createElement(m,a(a({ref:t},p),{},{components:n})):i.createElement(m,a({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,a[1]=s;for(var l=2;l<o;l++)a[l]=n[l];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9946:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var i=n(7462),r=(n(7294),n(3905));const o={sidebar_position:2,description:"The different expectation actions."},a="Expectations",s={unversionedId:"actions/expectations",id:"actions/expectations",title:"Expectations",description:"The different expectation actions.",source:"@site/docs/actions/expectations.md",sourceDirName:"actions",slug:"/actions/expectations",permalink:"/docs/actions/expectations",draft:!1,editUrl:"https://github.com/wolfenrain/docs/tree/main/docs/docs/actions/expectations.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,description:"The different expectation actions."},sidebar:"tutorialSidebar",previous:{title:"Gestures",permalink:"/docs/actions/gestures"},next:{title:"Text Input",permalink:"/docs/actions/input-text"}},c={},l=[{value:"Visibility expectations",id:"visibility-expectations",level:2}],p={toc:l};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"expectations"},"Expectations"),(0,r.kt)("p",null,"Fluttium provides a set of actions that will allow you to validate if certain widgets are\nvisible in your application."),(0,r.kt)("h2",{id:"visibility-expectations"},"Visibility expectations"),(0,r.kt)("p",null,"To check if a certain widget is visible or not you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"expectVisible")," action. The full\nYAML syntax of this action is as followed:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"- expectVisible:\n    text: 'Your Text' # An optional text regexp that is used to find a widget by semantic labels and visible text\n")),(0,r.kt)("p",null,"The short-hand syntax for this action is:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"- expectVisible: 'Your Text' # It will try to find by semantic labels and visible text\n")),(0,r.kt)("p",null,"If you want to test if a certain widget is ",(0,r.kt)("strong",{parentName:"p"},"not")," visible you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"expectNotVisible")," action.\nIt has the same syntax as the ",(0,r.kt)("inlineCode",{parentName:"p"},"expectVisible")," action."))}u.isMDXComponent=!0}}]);